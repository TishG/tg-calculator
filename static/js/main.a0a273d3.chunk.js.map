{"version":3,"sources":["components/Settings.js","redux/actionCreators/settingsActions.js","redux/constants/settingsConstants.js","components/Calculator.js","redux/actionCreators/calculatorActions.js","App.js","redux/reducers/settingsReducer.js","redux/store.js","index.js","redux/constants/calculatorConstants.js","redux/reducers/calculatorReducer.js"],"names":["mapDispatchToProps","setBGColor","color","type","payload","setVisibility","connect","state","visible","settings","props","className","onClick","style","display","setValue","val","SET_VALUE","setEnter","SET_ENTER","setClear","SET_CLEAR","setLimitReached","SET_LIMIT_REACHED","setError","SET_ERROR","value","calculator","limitReached","result","error","handleValue","a","async","length","err","message","backgroundColor","bgColor","AppStyles","initialState","reducer","combineReducers","action","calculatorReducer","store","createStore","ReactDOM","render","document","getElementById","eval"],"mappings":"qNA2DMA,EAAqB,CACzBC,WC1DwB,SAAAC,GACxB,MAAO,CACLC,KCJgC,uBDKhCC,QAASF,IDwDXG,cCpD2B,WACzB,MAAO,CACLF,KCVwB,oBF+DfG,eAXS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAME,SAASD,WASYR,EAAzBM,EAvDE,SAAAI,GAAU,IACjBF,EAAuCE,EAAvCF,QAASH,EAA8BK,EAA9BL,cAAeJ,EAAeS,EAAfT,WAChC,OACE,yBAAKU,UAAU,YACb,4BAAQA,UAAU,MAAMC,QAASP,GAC9BG,EAAU,QAAU,2BAEvB,yBACEG,UAAU,mBACVE,MAAOL,EAAU,CAAEM,QAAS,SAAY,CAAEA,QAAS,SAEnD,yBACEH,UAAU,YACVC,QAAS,kBAAMX,EAAW,8BAE1B,yBAAKU,UAAU,aACf,yBAAKA,UAAU,QAAf,SAEF,yBACEA,UAAU,YACVC,QAAS,kBAAMX,EAAW,8BAE1B,yBAAKU,UAAU,cACf,yBAAKA,UAAU,QAAf,UAEF,yBACEA,UAAU,YACVC,QAAS,kBAAMX,EAAW,8BAE1B,yBAAKU,UAAU,aACf,yBAAKA,UAAU,QAAf,SAEF,yBACEA,UAAU,YACVC,QAAS,kBAAMX,EAAW,8BAE1B,yBAAKU,UAAU,eACf,yBAAKA,UAAU,QAAf,gB,wBG2GJX,EAAqB,CACzBe,SCxJsB,SAAAC,GACtB,MAAO,CACLb,KAAMc,IACNb,QAASY,IDsJXE,SCtIsB,WACpB,MAAO,CACHf,KAAMgB,MDqIZC,SC7IsB,WACpB,MAAO,CACHjB,KAAKkB,MD4IXC,gBCpJ6B,WAC3B,MAAO,CACLnB,KAAMoB,MDmJVC,SCnIsB,WACtB,MAAO,CACLrB,KAAMsB,ODoIKnB,eAjBS,SAAAC,GACtB,MAAO,CACLmB,MAAOnB,EAAMoB,WAAWD,MACxBE,aAAcrB,EAAMoB,WAAWC,aAC/BC,OAAQtB,EAAMoB,WAAWE,OACzBC,MAAOvB,EAAMoB,WAAWG,SAYY9B,EAAzBM,EArJI,SAAAI,GAAU,IAEzBgB,EASEhB,EATFgB,MACAE,EAQElB,EARFkB,aACAC,EAOEnB,EAPFmB,OACAC,EAMEpB,EANFoB,MACAR,EAKEZ,EALFY,gBACAP,EAIEL,EAJFK,SACAK,EAGEV,EAHFU,SACAF,EAEER,EAFFQ,SACAM,EACEd,EADFc,SAEIO,EAAc,SAAMf,GAAN,SAAAgB,EAAAC,OAAA,gDAClB,IACMP,EAAMQ,QAAU,KAEG,IAAjBR,EAAMQ,QAA0B,MAAVR,EAExBX,EADWC,GAIXD,EADWW,EAAQV,IAInBU,EAAMQ,OAAS,IACjBZ,IAEF,MAAOa,GACPX,IACAT,EAASoB,EAAIC,SAjBG,sCAiCpB,OACE,yBAAKzB,UAAU,cACb,yBAAKA,UAAU,SACb,yBACEA,UAAU,SACVE,MACEgB,IAAWC,EACP,CAAEO,gBAAiB,oBACnBP,EACA,CAAEO,gBAAiB,WACnB,CAAEA,gBAAiB,YAGzB,yBAAK1B,UAAU,SACZe,IAAUI,EAAQ,yBAAKnB,UAAU,aAAae,GAAaA,GAASI,EAAQ,yBAAKnB,UAAU,SAASe,GAAe,yBAAKf,UAAU,aAAae,IAElJ,2BACEb,MAAOe,EAAe,CAAEd,QAAS,SAAY,CAAEA,QAAS,QACxDH,UAAU,iBAFZ,0BAOF,yBAAKA,UAAU,uBACb,4BAAQA,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,YAAYC,QAAS,kBAAMmB,EAAY,OAAzD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,eAAeC,QAAS,kBAAMQ,MAAhD,SAGA,4BAAQT,UAAU,SAASC,QAAS,kBAAMmB,EAAY,OAAtD,KAGA,4BAAQpB,UAAU,eAAeC,QA1FrB,oBAAAoB,EAAAC,OAAA,gDAClB,IACEf,IACiB,MAAbQ,EAAM,KACRF,IACAT,EAAS,yBAEX,MAAOoB,GACPX,IACAT,EAASoB,EAAIC,SATG,uCA0FZ,eExGK9B,eANS,SAAAC,GACtB,MAAO,CACL+B,QAAS/B,EAAME,SAAS4B,mBAIb/B,EAtBH,SAAAI,GAAU,IAGd6B,EAAY,CAChBF,gBAHkB3B,EAAZ4B,SAMR,OACE,yBAAK3B,UAAU,MAAME,MAAO0B,GAC1B,kBAAC,EAAD,MACA,wBAAI5B,UAAU,SAAd,oBACA,kBAAC,EAAD,U,eCfA6B,EAAe,CACnBH,gBAAiB,wBACjB7B,SAAS,G,QCHLiC,EAAUC,YAAgB,CAC9BjC,SDK6B,WAAmC,IAAlCF,EAAiC,uDAAzBiC,EAAcG,EAAW,uCAC/D,OAAQA,EAAOxC,MACb,IJZgC,uBIa9B,OAAO,eACFI,EADL,CAEE8B,gBAAiBM,EAAOvC,UAE5B,IJhB0B,iBIiBxB,OAAO,eACFG,EADL,CAEEC,SAAUD,EAAMC,UAEpB,QACE,OAAOD,ICjBXoB,WAAYiB,MAGDC,EAAQC,YAAYL,GCEjCM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,U,+BCf1B,0KAAO,IAAMjC,EAAY,YACZM,EAAoB,oBACpBF,EAAY,YACZF,EAAY,YACZM,EAAY,a,qYCKnBe,aAAe,CACnBd,MAAO,IACPE,cAAc,EACdC,QAAQ,EACRC,OAAO,GAGIc,kBAAoB,SAApBA,oBAAuD,IAAlCrC,MAAiC,uDAAzBiC,aAAcG,OAAW,uCACjE,OAAQA,OAAOxC,MACb,KAAKc,8DACH,OAAO,qIACFV,MADL,CAEEmB,MAAOiB,OAAOvC,QACdyB,QAAQ,IAEZ,KAAKV,8DACH,OAAO,qIACFZ,MADL,CAEEmB,MAAOyB,KAAK5C,MAAMmB,OAClBE,cAAc,EACdC,QAAQ,IAEZ,KAAKR,8DACH,OAAO,qIACFd,MADL,CAEEmB,MAAO,IACPE,cAAc,EACdC,QAAQ,EACRC,OAAM,IAEV,KAAKP,8DACH,OAAO,qIACFhB,MADL,CAEEqB,cAAc,EACdC,QAAQ,EACRC,OAAM,IAER,KAAKL,8DACH,OAAO,qIACFlB,MADL,CAEEuB,OAAM,IAEZ,QACE,OAAOvB,QAIEqC,kD","file":"static/js/main.a0a273d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setBGColor,\r\n  setVisibility\r\n} from \"../redux/actionCreators/settingsActions\";\r\n\r\nconst Settings = props => {\r\n  const { visible, setVisibility, setBGColor } = props;\r\n  return (\r\n    <div className=\"settings\">\r\n      <button className=\"btn\" onClick={setVisibility}>\r\n        {visible ? \"Close\" : \"Change Background Color\"}\r\n      </button>\r\n      <div\r\n        className=\"bg-color-changer\"\r\n        style={visible ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgba(240, 248, 255, 0.7)\")}\r\n        >\r\n          <div className=\"box blue\"></div>\r\n          <div className=\"name\">Blue</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgba(210, 248, 210, 0.7)\")}\r\n        >\r\n          <div className=\"box green\"></div>\r\n          <div className=\"name\">Green</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgba(255, 233, 236, 0.7)\")}\r\n        >\r\n          <div className=\"box pink\"></div>\r\n          <div className=\"name\">Pink</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgba(230, 230, 250, 0.7)\")}\r\n        >\r\n          <div className=\"box purple\"></div>\r\n          <div className=\"name\">Purple</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    visible: state.settings.visible\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setBGColor,\r\n  setVisibility\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import { SET_BACKGROUND_COLOR, SET_VISIBILITY } from \"../constants/settingsConstants\";\r\n\r\nexport const setBGColor = color => {\r\n  return {\r\n    type: SET_BACKGROUND_COLOR,\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const setVisibility = () => {\r\n    return {\r\n      type: SET_VISIBILITY,\r\n    };\r\n  };\r\n","export const SET_BACKGROUND_COLOR = 'SET_BACKGROUND_COLOR';\r\nexport const SET_VISIBILITY = 'SET_VISIBILITY';","import React from \"react\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setValue,\r\n  setLimitReached,\r\n  setClear,\r\n  setEnter,\r\n  setError\r\n} from \"../redux/actionCreators/calculatorActions\";\r\n\r\nconst Calculator = props => {\r\n  const {\r\n    value,\r\n    limitReached,\r\n    result,\r\n    error,\r\n    setLimitReached,\r\n    setValue,\r\n    setClear,\r\n    setEnter,\r\n    setError\r\n  } = props;\r\n  const handleValue = async val => {\r\n    try {\r\n      if (value.length <= 35) {\r\n        let newValue;\r\n        if (value.length === 1 && value === \"0\") {\r\n          newValue = val;\r\n          setValue(newValue);\r\n        } else {\r\n          newValue = value + val;\r\n          setValue(newValue);\r\n        }\r\n      }\r\n      if (value.length > 35) {\r\n        setLimitReached();\r\n      }\r\n    } catch (err) {\r\n      setError();\r\n      setValue(err.message);\r\n    }\r\n  };\r\n\r\n  const handleEnter = async () => {\r\n    try {\r\n      setEnter();\r\n      if (value[0] === \"/\") {\r\n        setError();\r\n        setValue('Unexpected value \"/\"');\r\n      }\r\n    } catch (err) {\r\n      setError();\r\n      setValue(err.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"frame\">\r\n        <div\r\n          className=\"screen\"\r\n          style={\r\n            result && !error\r\n              ? { backgroundColor: \"rgb(255,254,237)\" }\r\n              : error\r\n              ? { backgroundColor: \"#ffb1b1\" }\r\n              : { backgroundColor: \"#ffffff\" }\r\n          }\r\n        >\r\n          <div className=\"value\">\r\n            {value && !error ? <div className=\"not-error\">{value}</div>:value && error ? <div className=\"error\">{value}</div> : <div className=\"not-error\">{value}</div>}\r\n            </div>\r\n          <small\r\n            style={limitReached ? { display: \"block\" } : { display: \"none\" }}\r\n            className=\"limit-reached\"\r\n          >\r\n            Maximum Limit Reached\r\n          </small>\r\n        </div>\r\n        <div className=\"calc-btns-container\">\r\n          <button className=\"button op\" onClick={() => handleValue(\"+\")}>\r\n            +\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"-\")}>\r\n            -\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"*\")}>\r\n            *\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"(\")}>\r\n            (\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"/\")}>\r\n            /\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\")\")}>\r\n            )\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\".\")}>\r\n            .\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"1\")}>\r\n            1\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"2\")}>\r\n            2\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"3\")}>\r\n            3\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"4\")}>\r\n            4\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"5\")}>\r\n            5\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"6\")}>\r\n            6\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"7\")}>\r\n            7\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"8\")}>\r\n            8\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"9\")}>\r\n            9\r\n          </button>\r\n          <button className=\"button clear\" onClick={() => setClear()}>\r\n            Clear\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"0\")}>\r\n            0\r\n          </button>\r\n          <button className=\"button enter\" onClick={handleEnter}>\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: state.calculator.value,\r\n    limitReached: state.calculator.limitReached,\r\n    result: state.calculator.result,\r\n    error: state.calculator.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setValue,\r\n  setEnter,\r\n  setClear,\r\n  setLimitReached,\r\n  setError\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\r\n","import { SET_VALUE, SET_LIMIT_REACHED, SET_CLEAR, SET_ENTER, SET_ERROR } from \"../constants/calculatorConstants\";\r\n\r\nexport const setValue = val => {\r\n  return {\r\n    type: SET_VALUE,\r\n    payload: val\r\n  };\r\n};\r\n\r\nexport const setLimitReached = () => {\r\n    return {\r\n      type: SET_LIMIT_REACHED\r\n    };\r\n  };\r\n\r\nexport const setClear = () => {\r\n    return {\r\n        type:SET_CLEAR\r\n    }\r\n}\r\n\r\nexport const setEnter = () => {\r\n    return {\r\n        type: SET_ENTER\r\n    }\r\n}\r\n\r\nexport const setError = () => {\r\n  return {\r\n    type: SET_ERROR\r\n  };\r\n};\r\n","import React from \"react\";\n\n//components\nimport Settings from \"./components/Settings\";\nimport Calculator from \"./components/Calculator\";\n\n//Redux\nimport { connect } from \"react-redux\";\n\nconst App = props => {\n  const { bgColor } = props;\n  //styling\n  const AppStyles = {\n    backgroundColor: bgColor\n  };\n\n  return (\n    <div className=\"app\" style={AppStyles}>\n      <Settings />\n      <h1 className=\"title\">TishG Calculator</h1>\n      <Calculator />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    bgColor: state.settings.backgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\r\n  SET_BACKGROUND_COLOR,\r\n  SET_VISIBILITY\r\n} from \"../constants/settingsConstants\";\r\n\r\nconst initialState = {\r\n  backgroundColor: \"rgb(230,230,250, 0.7)\",\r\n  visible: false\r\n};\r\n\r\nexport const settingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BACKGROUND_COLOR:\r\n      return {\r\n        ...state,\r\n        backgroundColor: action.payload\r\n      };\r\n    case SET_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        visible: !state.visible\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, combineReducers } from \"redux\";\r\nimport { settingsReducer } from \"./reducers/settingsReducer\";\r\nimport { calculatorReducer } from \"./reducers/calculatorReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  settings: settingsReducer,\r\n  calculator: calculatorReducer\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","//to enable compatibility with Internet Explorer 11\nimport \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const SET_VALUE = \"SET_VALUE\";\r\nexport const SET_LIMIT_REACHED = \"SET_LIMIT_REACHED\";\r\nexport const SET_CLEAR = \"SET_CLEAR\";\r\nexport const SET_ENTER = \"SET_ENTER\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n","/* eslint no-eval: 0 */\r\nimport {\r\n  SET_ENTER,\r\n  SET_CLEAR,\r\n  SET_LIMIT_REACHED,\r\n  SET_VALUE,\r\n  SET_ERROR\r\n} from \"../constants/calculatorConstants\";\r\n\r\nconst initialState = {\r\n  value: \"0\",\r\n  limitReached: false,\r\n  result: false,\r\n  error: false\r\n};\r\n\r\nexport const calculatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VALUE:\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n        result: false\r\n      };\r\n    case SET_ENTER:\r\n      return {\r\n        ...state,\r\n        value: eval(state.value),\r\n        limitReached: false,\r\n        result: true\r\n      };\r\n    case SET_CLEAR:\r\n      return {\r\n        ...state,\r\n        value: \"0\",\r\n        limitReached: false,\r\n        result: false,\r\n        error:false\r\n      };\r\n    case SET_LIMIT_REACHED:\r\n      return {\r\n        ...state,\r\n        limitReached: true,\r\n        result: false,\r\n        error:false\r\n      };\r\n      case SET_ERROR:\r\n        return {\r\n          ...state,\r\n          error:true\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default calculatorReducer;\r\n"],"sourceRoot":""}