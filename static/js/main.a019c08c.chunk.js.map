{"version":3,"sources":["components/Settings.js","redux/actionCreators/settingsActions.js","redux/constants/settingsConstants.js","components/Calculator.js","redux/actionCreators/calculatorActions.js","App.js","redux/reducers/settingsReducer.js","redux/store.js","index.js","redux/constants/calculatorConstants.js","redux/reducers/calculatorReducer.js"],"names":["mapDispatchToProps","setBGColor","color","type","payload","setVisibility","connect","state","visible","settings","props","className","onClick","style","visibility","setValue","val","SET_VALUE","setEnter","SET_ENTER","setClear","SET_CLEAR","setLimitReached","SET_LIMIT_REACHED","value","calculator","limitReached","handleValue","length","display","bgColor","backgroundColor","AppStyles","initialState","reducer","combineReducers","action","calculatorReducer","store","createStore","ReactDOM","render","document","getElementById","eval"],"mappings":"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","file":"static/js/main.a019c08c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setBGColor,\r\n  setVisibility\r\n} from \"../redux/actionCreators/settingsActions\";\r\n\r\nconst Settings = props => {\r\n  const { visible, setVisibility, setBGColor } = props;\r\n  return (\r\n    <div className=\"settings\">\r\n      <button className=\"btn\" onClick={setVisibility}>\r\n        {visible ? \"Close\" : \"Change Background Color\"}\r\n      </button>\r\n      <div\r\n        className=\"bg-color-changer\"\r\n        style={visible ? { visibility: \"visible\" } : { visibility: \"hidden\" }}\r\n      >\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgb(240, 248, 255)\")}\r\n        >\r\n          <div className=\"box blue\"></div>\r\n          <div className=\"name\">Blue</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgb(210, 248, 210)\")}\r\n        >\r\n          <div className=\"box green\"></div>\r\n          <div className=\"name\">Green</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgb(255, 233, 236)\")}\r\n        >\r\n          <div className=\"box pink\"></div>\r\n          <div className=\"name\">Pink</div>\r\n        </div>\r\n        <div\r\n          className=\"btn color\"\r\n          onClick={() => setBGColor(\"rgb(230, 230, 250)\")}\r\n        >\r\n          <div className=\"box purple\"></div>\r\n          <div className=\"name\">Purple</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    visible: state.settings.visible\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setBGColor,\r\n  setVisibility\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import { SET_BACKGROUND_COLOR, SET_VISIBILITY } from \"../constants/settingsConstants\";\r\n\r\nexport const setBGColor = color => {\r\n  return {\r\n    type: SET_BACKGROUND_COLOR,\r\n    payload: color\r\n  };\r\n};\r\n\r\nexport const setVisibility = () => {\r\n    return {\r\n      type: SET_VISIBILITY,\r\n    };\r\n  };\r\n","export const SET_BACKGROUND_COLOR = 'SET_BACKGROUND_COLOR';\r\nexport const SET_VISIBILITY = 'SET_VISIBILITY';","import React from \"react\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setValue,\r\n  setLimitReached,\r\n  setClear,\r\n  setEnter\r\n} from \"../redux/actionCreators/calculatorActions\";\r\n\r\nconst Calculator = props => {\r\n  const {\r\n    value,\r\n    limitReached,\r\n    setLimitReached,\r\n    setValue,\r\n    setClear,\r\n    setEnter\r\n  } = props;\r\n  const handleValue = val => {\r\n    if (value.length <= 35) {\r\n      let newValue;\r\n      if (value.length === 1 && value === \"0\") {\r\n        newValue = val;\r\n        setValue(newValue);\r\n      } else {\r\n        newValue = value + val;\r\n        setValue(newValue);\r\n      }\r\n    } else {\r\n      setLimitReached();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"frame\">\r\n        <div className=\"screen\">\r\n          <div className=\"value\">{value}</div>\r\n          <small\r\n            style={limitReached ? { display: \"block\" } : { display: \"none\" }}\r\n            className=\"limit-reached\"\r\n          >\r\n            Maximum Limit Reached\r\n          </small>\r\n        </div>\r\n        <div className=\"calc-btns-container\">\r\n          <button className=\"button op\" onClick={() => handleValue(\"+\")}>\r\n            +\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"-\")}>\r\n            -\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"*\")}>\r\n            *\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"(\")}>\r\n            (\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\"/\")}>\r\n            /\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\")\")}>\r\n            )\r\n          </button>\r\n          <button className=\"button op\" onClick={() => handleValue(\".\")}>\r\n            .\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"1\")}>\r\n            1\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"2\")}>\r\n            2\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"3\")}>\r\n            3\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"4\")}>\r\n            4\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"5\")}>\r\n            5\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"6\")}>\r\n            6\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"7\")}>\r\n            7\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"8\")}>\r\n            8\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"9\")}>\r\n            9\r\n          </button>\r\n          <button className=\"button clear\" onClick={() => setClear()}>\r\n            Clear\r\n          </button>\r\n          <button className=\"button\" onClick={() => handleValue(\"0\")}>\r\n            0\r\n          </button>\r\n          <button className=\"button enter\" onClick={() => setEnter()}>\r\n            Enter\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: state.calculator.value,\r\n    limitReached: state.calculator.limitReached\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setValue,\r\n  setEnter,\r\n  setClear,\r\n  setLimitReached\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);\r\n","import { SET_VALUE, SET_LIMIT_REACHED, SET_CLEAR, SET_ENTER } from \"../constants/calculatorConstants\";\r\n\r\nexport const setValue = val => {\r\n  return {\r\n    type: SET_VALUE,\r\n    payload: val\r\n  };\r\n};\r\n\r\nexport const setLimitReached = () => {\r\n    return {\r\n      type: SET_LIMIT_REACHED\r\n    };\r\n  };\r\n\r\nexport const setClear = () => {\r\n    return {\r\n        type:SET_CLEAR\r\n    }\r\n}\r\n\r\nexport const setEnter = () => {\r\n    return {\r\n        type: SET_ENTER\r\n    }\r\n}\r\n","import React from \"react\";\n\n//components\nimport Settings from \"./components/Settings\";\nimport Calculator from \"./components/Calculator\";\n\n//Redux\nimport { connect } from \"react-redux\";\n\nconst App = ({ bgColor }) => {\n  //styling\n  const AppStyles = {\n    backgroundColor: bgColor\n  };\n\n  return (\n    <div className=\"app\" style={AppStyles}>\n      <Settings />\n      <h1 className=\"title\">TishG Calculator</h1>\n      <Calculator />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    bgColor: state.settings.backgroundColor\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\r\n  SET_BACKGROUND_COLOR,\r\n  SET_VISIBILITY\r\n} from \"../constants/settingsConstants\";\r\n\r\nconst initialState = {\r\n  backgroundColor: \"rgb(230,230,250)\",\r\n  visible: false\r\n};\r\n\r\nexport const settingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_BACKGROUND_COLOR:\r\n      return {\r\n        ...state,\r\n        backgroundColor: action.payload\r\n      };\r\n    case SET_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        visible: !state.visible\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, combineReducers } from \"redux\";\r\nimport { settingsReducer } from \"./reducers/settingsReducer\";\r\nimport { calculatorReducer } from \"./reducers/calculatorReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  settings: settingsReducer,\r\n  calculator: calculatorReducer\r\n});\r\n\r\nexport const store = createStore(reducer);\r\n","//to enable compatibility with Internet Explorer 11\nimport \"react-app-polyfill/ie11\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const SET_VALUE = \"SET_VALUE\";\r\nexport const SET_LIMIT_REACHED = \"SET_LIMIT_REACHED\";\r\nexport const SET_CLEAR = \"SET_CLEAR\";\r\nexport const SET_ENTER = \"SET_ENTER\";\r\n","import {\r\n  SET_ENTER,\r\n  SET_CLEAR,\r\n  SET_LIMIT_REACHED,\r\n  SET_VALUE\r\n} from \"../constants/calculatorConstants\";\r\n\r\nconst initialState = {\r\n  value: \"0\",\r\n  limitReached: false\r\n};\r\n\r\nexport const calculatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VALUE:\r\n      return {\r\n        ...state,\r\n        value: action.payload\r\n      };\r\n    case SET_ENTER:\r\n      return {\r\n        ...state,\r\n        value: eval(state.value)\r\n      };\r\n    case SET_CLEAR:\r\n      return {\r\n        ...state,\r\n        value: \"0\",\r\n        limitReached: false\r\n      };\r\n    case SET_LIMIT_REACHED:\r\n      return {\r\n        ...state,\r\n        limitReached: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default calculatorReducer;\r\n"],"sourceRoot":""}